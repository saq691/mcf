<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
			http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
			http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd 
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
			http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd ">

	<!-- -->
	<import resource="classpath*:/spring/spring-context.xml" />

	<!-- 自动扫描 -->
	<context:component-scan base-package="com.mcf.manage.web.controller" />

	<mvc:annotation-driven>
		<!-- 处理responseBody 里面日期类型 -->
		<mvc:message-converters>
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="prefixJson" value="false" />
				<property name="supportedMediaTypes">
					<list>
						<value>application/json</value>
						<value>text/json</value>
					</list>
				</property>
				<property name="objectMapper">
					<bean class="com.fasterxml.jackson.databind.ObjectMapper">
						<property name="dateFormat">
							<bean class="java.text.SimpleDateFormat">
								<constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
							</bean>
						</property>
					</bean>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 静态资源管理 -->
	<mvc:default-servlet-handler />

	<!-- 按照BeanName解析视图 -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="1" />
	</bean>

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 字符串、json -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="stringHttpMessageConverter" />
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>

	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize" value="-1" />
	</bean>

	<!-- 统一异常处理 -->
	<bean id="exceptionHandler" class="com.mcf.manage.core.exception.MyExceptionHandler" />

	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter" />
	<!-- json转换 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />

	<bean id="springUtils" class="com.mcf.base.common.utils.SpringUtils" />

	<!-- 使用国际化消息 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:messages/messages</value>
			</list>
		</property>
		<property name="useCodeAsDefaultMessage" value="false" />
		<!-- 刷新资源文件的周期，以秒为单位 -->
		<property name="cacheSeconds" value="7200" />
	</bean>

	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 如果不加,默认使用classpath下的 ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>

	<mvc:annotation-driven validator="validator" />

	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />

	<!-- 拦截器配置 -->
	<mvc:interceptors>
		<!-- 配置Token拦截器，防止用户重复提交数据 -->
		<mvc:interceptor>
			<!--这个地方时你要拦截得路径 我这个意思是拦截所有得URL -->
			<mvc:mapping path="/sysuser/addSysuser" />
			<mvc:mapping path="/news/saveUpdate" />
			<mvc:mapping path="/copartner/addRemark" />
			<mvc:mapping path="/contactInfo/addRemark" />
			<!--class文件路径改成你自己写得拦截器路径！！ -->
			<bean class="com.mcf.base.common.interceptor.SameURLDataInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

</beans>
